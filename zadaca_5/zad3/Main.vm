function Main.main 0
call Main.graph 0
pop temp 0
push constant 0
return
function Main.graph 7
push constant 128
push constant 0
push constant 128
push constant 255
call Screen.drawLine 4
pop temp 0
push constant 0
push constant 128
push constant 255
push constant 128
call Screen.drawLine 4
pop temp 0
push constant 0
pop local 2
push constant 128
neg
pop local 0
label WHILE_EXP0
push local 0
push constant 128
lt
not
if-goto WHILE_END0
push local 0
call Main.fx 1
pop local 1
push local 1
push constant 999
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 128
push local 0
add
pop local 3
push constant 128
push local 1
add
pop local 4
push local 2
push constant 1
add
pop local 2
goto IF_END1
label IF_FALSE1
push constant 128
push local 0
add
pop local 5
push constant 128
push local 1
add
pop local 6
push local 3
push local 4
push local 5
push local 6
call Screen.drawLine 4
pop temp 0
push local 5
pop local 3
push local 6
pop local 4
label IF_END1
label IF_FALSE0
push local 0
push constant 4
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Main.fx 1
push argument 0
push argument 0
call Math.multiply 2
push constant 15
call Math.divide 2
push constant 100
sub
pop local 0
push local 0
push constant 128
gt
push local 0
push constant 127
neg
lt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 999
return
label IF_FALSE0
push local 0
neg
return
