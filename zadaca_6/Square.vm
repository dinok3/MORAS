<Square.xml>
<class>
  <keyword> class </keyword>
  <identifier> Square </identifier>
  <symbol> { </symbol>
  <classVarDec>
    <keyword> field </keyword>
    <keyword> int </keyword>
    <identifier> x </identifier>
    <symbol> , </symbol>
    <identifier> y </identifier>
    <symbol> , </symbol>
    <identifier> s </identifier>
    <symbol> ; </symbol>
  </classVarDec>
  <classVarDec>
    <keyword> field </keyword>
    <keyword> int </keyword>
    <identifier> vx </identifier>
    <symbol> , </symbol>
    <identifier> vy </identifier>
    <symbol> ; </symbol>
  </classVarDec>
  <subroutineDec>
    <keyword> constructor </keyword>
    <identifier> Square </identifier>
    <identifier> new </identifier>
    <symbol> ( </symbol>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <letStatement>
        <keyword> let </keyword>
        <identifier> s </identifier>
        <symbol> = </symbol>
        <term>
          <integerConstant> 16 </integerConstant>
        </term>
        <symbol> ; </symbol>
      </letStatement>
      <letStatement>
        <keyword> let </keyword>
        <identifier> x </identifier>
        <symbol> = </symbol>
        <term>
          <integerConstant> 240 </integerConstant>
        </term>
        <symbol> ; </symbol>
      </letStatement>
      <letStatement>
        <keyword> let </keyword>
        <identifier> y </identifier>
        <symbol> = </symbol>
        <term>
          <integerConstant> 112 </integerConstant>
        </term>
        <symbol> ; </symbol>
      </letStatement>
      <letStatement>
        <keyword> let </keyword>
        <identifier> vx </identifier>
        <symbol> = </symbol>
        <term>
          <integerConstant> 0 </integerConstant>
        </term>
        <symbol> ; </symbol>
      </letStatement>
      <letStatement>
        <keyword> let </keyword>
        <identifier> vy </identifier>
        <symbol> = </symbol>
        <term>
          <integerConstant> 0 </integerConstant>
        </term>
        <symbol> ; </symbol>
      </letStatement>
      <subroutineCall>
        <keyword> do </keyword>
        <identifier> draw </identifier>
        <symbol> ( </symbol>
        <term>
          <keyword> true </keyword>
        </term>
        <symbol> ) </symbol>
        <symbol> ; </symbol>
      </subroutineCall>
      <returnStatement>
        <keyword> return </keyword>
        <term>
          <keyword> this </keyword>
        </term>
        <symbol> ; </symbol>
      </returnStatement>
      <symbol> } </symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword> method </keyword>
    <keyword> void </keyword>
    <identifier> move </identifier>
    <symbol> ( </symbol>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
